plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'

}

class Scrambler {
    Random random = new Random()
    String getRandomString(int i) {
        return random.with {(1..(6 + random.nextInt(i))).collect {(('a'..'z')).join()[ nextInt((('a'..'z')).join().length())]}.join()}
    }
}

Scrambler scrambler = new Scrambler()

android {
    compileSdk = 36

    // CRITICAL: compileSdkVersion must be specified first

    namespace = rootProject.ext.packageName
    ndkVersion = rootProject.ext.ndkVersion

    // Signing configurations - inline for proper ordering
    signingConfigs {
        release {
            // Environment variables for secure signing
            def keystorePath = System.getenv('BEARMOD_KEYSTORE_PATH') ?: 'C:\\Users\\BearOwner\\BearOwner.jks'
            def keystorePassword = System.getenv('BEARMOD_KEYSTORE_PASSWORD') ?: '147258369VV'
            def keyAliasValue = System.getenv('BEARMOD_KEY_ALIAS') ?: 'key0'
            def keyPasswordValue = System.getenv('BEARMOD_KEY_PASSWORD') ?: '147258369VV'

            if (file(keystorePath).exists()) {
                storeFile file(keystorePath)
                storePassword keystorePassword
                keyAlias keyAliasValue
                keyPassword keyPasswordValue
                enableV1Signing true
                enableV2Signing true
                enableV3Signing true
                enableV4Signing false
                println "✅ Release signing configured with: ${keystorePath}"
            } else {
                println "⚠️  Keystore not found at: ${keystorePath}"
                println "   Set BEARMOD_KEYSTORE_PATH environment variable"
            }
        }

        debug {
            // Use Android debug keystore for debug builds
            def debugKeystorePath = System.getProperty('user.home') + '/.android/debug.keystore'
            def windowsDebugPath = System.getProperty('user.home') + '\\.android\\debug.keystore'

            if (file(debugKeystorePath).exists() || file(windowsDebugPath).exists()) {
                def keystoreFile = file(debugKeystorePath).exists() ?
                        file(debugKeystorePath) : file(windowsDebugPath)

                storeFile keystoreFile
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
                enableV1Signing true
                enableV2Signing true
                println "✅ Debug signing configured with Android debug keystore"
            } else {
                println "⚠️  Android debug keystore not found, using default signing"
            }
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        baseline = file("lint-baseline.xml")
        disable 'StringFormatMatches', 'StringFormatInvalid'
    }

    defaultConfig {
        applicationId = rootProject.ext.packageName
        minSdk = 28
        //noinspection OldTargetApi
        targetSdk = 35
        versionCode = rootProject.ext.versionCode
        versionName = rootProject.ext.versionName

        vectorDrawables {
            useSupportLibrary true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }

        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters "arm64-v8a"

        }

        multiDexEnabled false
    }

    buildTypes {
        release {
            // R8 OPTIMIZATION & OBFUSCATION SETTINGS
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            debuggable false
            jniDebuggable false
            zipAlignEnabled true

            // SIGNING CONFIGURATION
            signingConfig signingConfigs.release

            // R8 CONFIGURATION FILES
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // BUILD OPTIMIZATIONS
            manifestPlaceholders = [randomName: "BEAR-LOADER"]

            // R8 FULL MODE enabled in gradle.properties
            // Additional security best practices
            // Ensure debuggable is false in manifest as well
            // Consider setting android:allowBackup="false" and android:exported="false" for sensitive components in AndroidManifest.xml

            // ADDITIONAL SECURITY SETTINGS
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "BUILD_TYPE", '"release"'
            
            // BEAR-LOADER DOWNLOAD MANAGER CONFIG
            buildConfigField "boolean", "ENABLE_DOWNLOAD_LOGGING", "false"
            buildConfigField "int", "MAX_CONCURRENT_DOWNLOADS", "3"
            buildConfigField "long", "DOWNLOAD_TIMEOUT_MS", "300000L"  // 5 minutes
            buildConfigField "String[]", "SUPPORTED_GAMES", "{\"com.tencent.ig\", \"com.pubg.krmobile\", \"com.reko.pubgm\", \"com.vng.pubgmobile\", \"com.battlegroundmobile.india\"}"

            // RESOURCE OPTIMIZATION
            resValue "string", "app_name", "BEAR-LOADER"
        }

        debug {
            // DEBUG BUILD SETTINGS (full obfuscation for security)
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            debuggable false
            jniDebuggable false
            zipAlignEnabled true

            //signingConfig signingConfigs.debug
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'


            // MINIMAL PROGUARD (for testing obfuscation compatibility)
            //  proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [randomName: "BEAR-LOADER"]

            // R8 FULL MODE enabled in gradle.properties

            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "BUILD_TYPE", '"release"'
            
            // BEAR-LOADER DOWNLOAD MANAGER CONFIG (DEBUG)
            buildConfigField "boolean", "ENABLE_DOWNLOAD_LOGGING", "true"
            buildConfigField "int", "MAX_CONCURRENT_DOWNLOADS", "2"
            buildConfigField "long", "DOWNLOAD_TIMEOUT_MS", "180000L"  // 3 minutes for debug
            buildConfigField "String[]", "SUPPORTED_GAMES", "{\"com.tencent.ig\", \"com.pubg.krmobile\", \"com.reko.pubgm\", \"com.vng.pubgmobile\", \"com.battlegroundmobile.india\"}"

            resValue "string", "app_name", "BEAR-LOADER"

// APPLICATION ID SUFFIX FOR PARALLEL INSTALLATION
            // applicationIdSuffix ".debug"  // Removed to have same package for release and debug
            // versionNameSuffix "-DEBUG"    // Removed to have consistent version naming
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def date = new Date().format('yyyyMMddHHmmss')
            def fileName = "${variant.applicationId}-${variant.buildType.name}-${date}.apk"
            output.outputFileName = fileName

            variant.getAssembleProvider().configure {
                it.doLast {
                    copy {
                        from "build/outputs/mapping/${variant.buildType.name}"
                        into 'proguard'
                        include '**/mapping.txt'
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ['-opt-in=kotlin.RequiresOptIn']
    }

    buildFeatures {
        viewBinding true
        buildConfig true    // Enable BuildConfig for custom fields
    }

    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }
}

// Signing configuration is now inline in android block above
// apply from: '../signing.gradle'  // Disabled - using inline configuration

// BlackObfuscator configuration - Disabled for AGP 8.1 compatibility
// The Transform API has been removed in AGP 8.1, so obfuscation plugins need updates
// TODO: Re-enable when compatible versions are available
/*
BlackObfuscator {
    enabled false  // Disabled until AGP 8.1 compatible version available
    depth 1
    obfClass = [
        "com.happy.pro.activity",
        "com.happy.pro.Component",
        "com.happy.pro.floating.FloatService",
        "com.happy.pro.floating.ToggleAim",
        "com.happy.pro.floating.ToggleBullet",
        "com.happy.pro.floating.ToggleSimulation",
        "com.happy.pro.floating.Overlay",
    ]
    blackClass = []
}
*/

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "com.google.android.material:material:1.12.0"
    //noinspection Aligned16KB
    implementation 'com.tencent:mmkv-static:2.2.2'
    implementation 'org.jdeferred:jdeferred-android-aar:1.2.6'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.1.21'
    implementation "io.github.molihuan:pathselector:1.1.16"
    def lottieVersion = '6.6.6'
    //noinspection NewerVersionAvailable,GradleDependency
    implementation "com.airbnb.android:lottie:$lottieVersion"
    implementation "com.github.topjohnwu.libsu:core:3.1.1"
    implementation "androidx.cardview:cardview:1.0.0"
    // implementation 'com.loopeer.lib:shadow:0.0.4-beta3'
    implementation 'com.blankj:utilcodex:1.31.1'
    implementation 'net.lingala.zip4j:zip4j:2.11.5'
    implementation "com.github.bumptech.glide:glide:4.16.0"
    implementation 'com.github.techinessoverloaded:progress-dialog:1.5.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.github.skydoves:powerspinner:1.2.7'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.github.ismaeldivita:chip-navigation-bar:1.4.0'
    // OkHttp for KeyAuth API 1.3 integration
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // JSON processing for KeyAuth API responses
    implementation 'com.google.code.gson:gson:2.11.0'
    
    // Work Manager for background downloads (optional enhancement)
    implementation 'androidx.work:work-runtime:2.10.0'
    
    // Enhanced file operations
    implementation 'commons-io:commons-io:2.15.1'
    
    // Base64 encoding/decoding utilities (if not using built-in)
    // implementation 'commons-codec:commons-codec:1.16.0'  // Optional, Android has built-in Base64
}